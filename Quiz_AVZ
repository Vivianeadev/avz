<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>AVZ_Games — Trivia AVZ (Manual Wallet)</title>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@500;700&family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    :root{
      --gold:#d4af37;
      --rose:#e66ea1;
      --dark:#0e0b14;
      --text:#f5f2ea;
      --muted:#c9c3b2;
    }
    *{box-sizing:border-box}
    body{
      margin:0;
      font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Arial;
      color:var(--text);
      background:
        radial-gradient(1200px 600px at 10% -10%, rgba(230,110,161,.25), transparent 60%),
        radial-gradient(1000px 500px at 110% 10%, rgba(212,175,55,.22), transparent 60%),
        linear-gradient(180deg, #171226, #0b0912 45%, #0a0a11);
      min-height:100vh;
    }
    header{
      position:sticky; top:0; z-index:10;
      background:linear-gradient(180deg, rgba(20,15,30,.8), rgba(20,15,30,.4));
      backdrop-filter:blur(6px);
      border-bottom:1px solid rgba(212,175,55,.15);
    }
    nav{display:flex; gap:18px; padding:14px 18px; align-items:center}
    nav a{color:var(--muted); text-decoration:none; font-size:.95rem}
    nav a:hover{color:var(--gold)}
    main{max-width:980px; margin:24px auto; padding:0 16px}
    h1{font-family:"Playfair Display",serif; font-weight:700; letter-spacing:.4px; margin:.2rem 0 0}
    .subtitle{margin:.25rem 0 1.25rem; color:var(--muted)}
    .card{
      background:linear-gradient(180deg, rgba(255,255,255,.06), rgba(255,255,255,.02));
      border:1px solid rgba(212,175,55,.18);
      border-radius:18px; padding:18px; box-shadow:0 8px 38px rgba(0,0,0,.25);
    }
    .wallet-box{
      display:flex; flex-wrap:wrap; gap:10px; align-items:center; margin:12px 0 18px;
      padding:12px; border-radius:14px; border:1px dashed rgba(212,175,55,.35);
      background:rgba(212,175,55,.06);
      font-size:.95rem;
    }
    .wallet-box input{
      flex:1 1 340px;
      padding:10px 12px; border-radius:10px; border:1px solid rgba(255,255,255,.18);
      background:rgba(0,0,0,.3); color:var(--text);
      outline:none;
    }
    .btn{
      appearance:none; border:none; border-radius:12px; padding:10px 16px;
      background:linear-gradient(90deg, var(--gold), var(--rose));
      color:#1a1026; font-weight:700; cursor:pointer;
      box-shadow:0 6px 20px rgba(230,110,161,.25);
    }
    .btn[disabled]{opacity:.5; cursor:not-allowed; box-shadow:none}
    .question{font-size:1.2rem; margin:.25rem 0 1rem}
    .answers{display:grid; grid-template-columns:repeat(2,minmax(0,1fr)); gap:10px}
    .answer-btn{
      padding:12px 14px; border-radius:12px; border:1px solid rgba(255,255,255,.14);
      background:rgba(255,255,255,.04); color:var(--text); cursor:pointer;
    }
    .answer-btn:hover{border-color:var(--gold)}
    .result{display:none; margin-top:12px; color:var(--gold)}
    .stats{display:flex; gap:16px; flex-wrap:wrap; margin:14px 0}
    .stat{padding:10px 12px; border-radius:10px; background:rgba(255,255,255,.04); border:1px solid rgba(212,175,55,.15)}
    #progress-bar{height:10px; background:rgba(255,255,255,.1); border-radius:999px; overflow:hidden; margin-top:6px}
    #progress{height:10px; width:0%; background:linear-gradient(90deg, var(--rose), var(--gold));}
    footer{margin:30px 0 40px; text-align:center; color:var(--muted); font-size:.9rem}
    footer small{display:block; color:var(--gold)}
  </style>
</head>
<body>
  <header>
    <nav>
      <a href="#sobre">Sobre</a>
      <a href="#investidores">Investidores</a>
      <a href="#desenvolvedores">Desenvolvedores</a>
      <a href="#liquidez">Liquidez</a>
    </nav>
  </header>
  <main>
    <h1>AVZ_Games — Trivia AVZ</h1>
    <p class="subtitle">Economia Verde • Blockchain • AVZ • USDT • Legislação • Renda Compartilhada</p>

    <section class="card">
      <div class="wallet-box">
        <span>Informe sua carteira Polygon (0x…):</span>
        <input id="walletInput" placeholder="0xabcdef... (42 caracteres)" />
        <button class="btn" id="saveWalletBtn">Validar carteira</button>
        <small id="walletMsg" style="color:var(--muted)">Acesso é liberado apenas após validação.</small>
      </div>

      <div class="stats">
        <div class="stat">Pontuação: <strong id="scoreValue">0</strong></div>
        <div class="stat">AVZ acumulado: <strong id="avzValue">0.00000000</strong></div>
        <div class="stat" id="cotacaoText">Cotação: US$ 0,0004 • Meta R$ 200,00</div>
      </div>

      <div id="progress-bar"><div id="progress"></div></div>
      <p id="projectionText" style="margin:.6rem 0 0">Faltam discretamente algumas AVZ para alcançar R$ 200,00</p>
    </section>

    <section class="card" style="margin-top:16px">
      <div class="question" id="question">Valide sua carteira para começar.</div>
      <div class="answers">
        <button class="answer-btn"></button>
        <button class="answer-btn"></button>
        <button class="answer-btn"></button>
        <button class="answer-btn"></button>
      </div>
      <div class="result" id="result">—</div>
      <div style="margin-top:12px">
        <button class="btn" id="restartBtn" disabled>Reiniciar</button>
      </div>
    </section>
  </main>

  <footer>
    AVZ_Games © 2025 — Elegância, educação e inovação.
    <small>Requer carteira Polygon válida para acumular ganhos. O envio é manual e respeita legislações locais.</small>
  </footer>

  <script>
    // ===== Config =====
    const APPS_SCRIPT_ENDPOINT = "https://script.google.com/macros/s/AKfycbwCi5VpSYyYbFHip0kNL7wPGBBxQnrsTW-oU27q7FqdkEn49OunVUxL7iXNgwgv5Nbgmw/exec";
    const SHEET_ID = "1TIna4BFeEfHNWJI3ZnV_fOAEtI6yPltFQhM323b7ZUw"; // opcional: o servidor pode ignorar
    const AVZ_PRICE_USD = 0.0004;   // 0,04 cent de dólar
    const USD_TO_BRL = 5.0;
    const REWARD_AVZ = 3.6e-7;      // 0.00000036 AVZ por acerto
    const TARGET_BRL = 200;

    // ===== Estado =====
    let questions = [
      {question: "O que é blockchain?", answers:["Uma base de dados distribuída","Um banco central","Um app de mensagens","Um antivírus"], correctAnswer:"Uma base de dados distribuída"},
      {question: "Qual é a função de um contrato inteligente?", answers:["Executar regras automaticamente","Emitir cédulas físicas","Armazenar apenas vídeos","Fechar a internet"], correctAnswer:"Executar regras automaticamente"},
      {question: "USDT é melhor descrito como:", answers:["Stablecoin pareada ao dólar","Moeda móvel estatal","Cartão de crédito","Imposto"], correctAnswer:"Stablecoin pareada ao dólar"},
      {question: "O que é uma carteira (wallet) cripto?", answers:["Um software/hardware que guarda chaves","Um cofre físico de banco","Um site de compras","Um arquivo de texto"], correctAnswer:"Um software/hardware que guarda chaves"},
      {question: "Taxa de gas na Polygon é:", answers:["Custo para executar transações","Imposto de renda","Mensalidade do app","Publicidade"], correctAnswer:"Custo para executar transações"},
      {question: "Seed phrase deve ser:", answers:["Mantida em segredo e offline","Compartilhada com amigos","Enviada por e-mail","Publicada no perfil"], correctAnswer:"Mantida em segredo e offline"},
      {question: "AVZ cotado a US$ 0,0004 significa:", answers:["Quatro décimos de centavo por AVZ","Quatro dólares por AVZ","Quatro centavos por AVZ","Quatro reais por AVZ"], correctAnswer:"Quatro décimos de centavo por AVZ"},
      {question: "Para ganhos com tokens, é correto:", answers:["Respeitar leis de cada país","Ignorar licenças locais","Prometer rendimentos fixos","Esconder riscos"], correctAnswer:"Respeitar leis de cada país"},
      {question: "Uma address válida na Polygon geralmente:", answers:["Começa com 0x + 40 hex","Começa com 1 + 33 dígitos","É um e-mail","É um CPF"], correctAnswer:"Começa com 0x + 40 hex"},
      {question: "KYC significa:", answers:["Know Your Customer","Keep Your Coins","Key Yard Control","Kernel Year Check"], correctAnswer:"Know Your Customer"}
    ].sort(()=>Math.random()-0.5);

    let currentQuestionIndex = 0;
    let score = 0;
    let avz = 0;
    let avzGoal = TARGET_BRL / (AVZ_PRICE_USD * USD_TO_BRL);
    let userWallet = null;
    const qEl = document.getElementById("question");
    const resultEl = document.getElementById("result");

    // ===== UI Helpers =====
    function setAnswers(q){
      const btns = document.querySelectorAll(".answer-btn");
      const opts = q.answers.slice().sort(()=>Math.random()-0.5);
      btns.forEach((btn, i)=>{
        btn.textContent = opts[i];
        btn.onclick = ()=>checkAnswer(opts[i], q.correctAnswer);
      });
    }

    function updateStats(){
      const avzInUSD = avz * AVZ_PRICE_USD;
      const avzInBRL = avzInUSD * USD_TO_BRL;
      document.getElementById("scoreValue").textContent = score;
      document.getElementById("avzValue").textContent = avz.toFixed(8);
      document.getElementById("cotacaoText").textContent =
        `Cotação: US$ ${AVZ_PRICE_USD.toFixed(4)} • Seu total: US$ ${avzInUSD.toFixed(4)} / R$ ${avzInBRL.toFixed(4)}`;
      const progressPct = Math.min(100, (avz/avzGoal)*100);
      document.getElementById("progress").style.width = progressPct + "%";
      const restante = Math.max(0, avzGoal - avz);
      document.getElementById("projectionText").textContent =
        `Faltam discretamente ${restante.toFixed(8)} AVZ para alcançar R$ ${TARGET_BRL.toFixed(2)}`;
    }

    // ===== Fluxo do jogo =====
    function showQuestion(){
      if(!userWallet){
        qEl.textContent = "Valide sua carteira para começar.";
        return;
      }
      const q = questions[currentQuestionIndex];
      qEl.textContent = q.question;
      setAnswers(q);
    }

    function checkAnswer(answer, correct){
      if(answer === correct){
        score++;
        avz += REWARD_AVZ;
        resultEl.style.display = "block";
        resultEl.textContent = "Você acertou!";
      } else {
        resultEl.style.display = "block";
        resultEl.textContent = "Você errou! Resposta correta: " + correct;
      }
      updateStats();
      setTimeout(()=>{
        resultEl.style.display = "none";
        nextQuestion();
      }, 1100);
    }

    function nextQuestion(){
      currentQuestionIndex++;
      if(currentQuestionIndex < questions.length){
        showQuestion();
      } else {
        qEl.textContent = "Fim do jogo! Pontuação final: " + score;
        document.querySelectorAll(".answer-btn").forEach(b=>b.disabled = true);
        document.getElementById("restartBtn").disabled = false;
        sendResults().catch(console.error);
      }
    }

    document.getElementById("restartBtn").onclick = ()=>location.reload();

    // ===== Carteira manual =====
    function isValidPolygonAddress(addr){
      return /^0x[a-fA-F0-9]{40}$/.test(addr);
    }

    document.getElementById("saveWalletBtn").onclick = ()=>{
      const addr = (document.getElementById("walletInput").value || "").trim();
      const msg = document.getElementById("walletMsg");
      if(!isValidPolygonAddress(addr)){
        msg.style.color = "#ff8a8a";
        msg.textContent = "Carteira inválida. Use o formato 0x + 40 caracteres hexadecimais.";
        userWallet = null;
        return;
      }
      userWallet = addr;
      msg.style.color = "var(--gold)";
      msg.textContent = "Carteira validada! Boa sorte no jogo.";
      showQuestion();
    };

    // ===== Envio para Apps Script =====
    async function sendResults(){
      try{
        const payload = {
          wallet: userWallet,
          score,
          avz: Number(avz.toFixed(8)),
          avzPriceUSD: AVZ_PRICE_USD,
          usdToBrl: USD_TO_BRL,
          targetBRL: TARGET_BRL,
          timestamp: new Date().toISOString(),
          sheetId: SHEET_ID,
          note: "AVZ_Games envio manual"
        };
        const resp = await fetch(APPS_SCRIPT_ENDPOINT, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload)
        });
        const text = await resp.text();
        console.log("Apps Script:", text);
      }catch(err){
        console.error("Falha ao enviar para Apps Script:", err);
      }
    }

    // Boot
    updateStats();
    showQuestion();
  </script>
</body>
</html>
